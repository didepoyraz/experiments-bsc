#!/bin/sh

#
# Copyright © 2015-2021 the original authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

##############################################################################
#
#   greenifier start up script for POSIX generated by Gradle.
#
#   Important for running:
#
#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is
#       noncompliant, but you have some other compliant shell such as ksh or
#       bash, then to run this script, type that shell name before the whole
#       command line, like:
#
#           ksh greenifier
#
#       Busybox and similar reduced shells will NOT work, because this script
#       requires all of these POSIX shell features:
#         * functions;
#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,
#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;
#         * compound commands having a testable exit status, especially «case»;
#         * various built-in commands including «command», «set», and «ulimit».
#
#   Important for patching:
#
#   (2) This script targets any POSIX shell, so it avoids extensions provided
#       by Bash, Ksh, etc; in particular arrays are avoided.
#
#       The "traditional" practice of packing multiple parameters into a
#       space-separated string is a well documented source of bugs and security
#       problems, so this is (mostly) avoided, by progressively accumulating
#       options in "$@", and eventually passing that to Java.
#
#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,
#       and GREENIFIER_OPTS) rely on word-splitting, this is performed explicitly;
#       see the in-line comments for details.
#
#       There are tweaks for specific operating systems such as AIX, CygWin,
#       Darwin, MinGW, and NonStop.
#
#   (3) This script is generated from the Groovy template
#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt
#       within the Gradle project.
#
#       You can find Gradle at https://github.com/gradle/gradle/.
#
##############################################################################

# Attempt to set APP_HOME

# Resolve links: $0 may be a link
app_path=$0

# Need this for daisy-chained symlinks.
while
    APP_HOME=${app_path%"${app_path##*/}"}  # leaves a trailing /; empty if no leading path
    [ -h "$app_path" ]
do
    ls=$( ls -ld "$app_path" )
    link=${ls#*' -> '}
    case $link in             #(
      /*)   app_path=$link ;; #(
      *)    app_path=$APP_HOME$link ;;
    esac
done

# This is normally unused
# shellcheck disable=SC2034
APP_BASE_NAME=${0##*/}
# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)
APP_HOME=$( cd "${APP_HOME:-./}.." > /dev/null && pwd -P ) || exit

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD=maximum

warn () {
    echo "$*"
} >&2

die () {
    echo
    echo "$*"
    echo
    exit 1
} >&2

# OS specific support (must be 'true' or 'false').
cygwin=false
msys=false
darwin=false
nonstop=false
case "$( uname )" in                #(
  CYGWIN* )         cygwin=true  ;; #(
  Darwin* )         darwin=true  ;; #(
  MSYS* | MINGW* )  msys=true    ;; #(
  NONSTOP* )        nonstop=true ;;
esac

#CLASSPATH=$APP_HOME/lib/opendc-experiments-greenifier.jar:$APP_HOME/lib/opendc-experiments-base.jar:$APP_HOME/lib/opendc-compute-failure.jar:$APP_HOME/lib/opendc-compute-simulator.jar:$APP_HOME/lib/opendc-compute-topology.jar:$APP_HOME/lib/opendc-compute-workload.jar:$APP_HOME/lib/opendc-compute-telemetry.jar:$APP_HOME/lib/opendc-compute-service.jar:$APP_HOME/lib/opendc-compute-carbon.jar:$APP_HOME/lib/opendc-compute-api.jar:$APP_HOME/lib/opendc-simulator-compute.jar:$APP_HOME/lib/opendc-simulator-power.jar:$APP_HOME/lib/opendc-simulator-network.jar:$APP_HOME/lib/opendc-simulator-core.jar:$APP_HOME/lib/opendc-simulator-flow.jar:$APP_HOME/lib/opendc-common.jar:$APP_HOME/lib/opendc-trace-api.jar:$APP_HOME/lib/jackson-dataformat-csv-2.16.1.jar:$APP_HOME/lib/opendc-trace-parquet.jar:$APP_HOME/lib/hadoop-common-3.3.6.jar:$APP_HOME/lib/jackson-databind-2.16.1.jar:$APP_HOME/lib/jackson-annotations-2.16.1.jar:$APP_HOME/lib/jackson-core-2.16.1.jar:$APP_HOME/lib/jackson-module-kotlin-2.16.1.jar:$APP_HOME/lib/kotlin-reflect-1.6.21.jar:$APP_HOME/lib/kotlinx-serialization-core-jvm-1.6.0.jar:$APP_HOME/lib/kotlinx-serialization-json-jvm-1.6.0.jar:$APP_HOME/lib/kotlinx-coroutines-core-jvm-1.8.0.jar:$APP_HOME/lib/kotlin-logging-jvm-3.0.5.jar:$APP_HOME/lib/kotlin-stdlib-jdk8-1.8.10.jar:$APP_HOME/lib/clikt-jvm-3.5.2.jar:$APP_HOME/lib/kotlin-stdlib-jdk7-1.8.10.jar:$APP_HOME/lib/kotlin-stdlib-1.9.22.jar:$APP_HOME/lib/progressbar-0.10.0.jar:$APP_HOME/lib/log4j-slf4j2-impl-2.23.0.jar:$APP_HOME/lib/log4j-core-2.23.0.jar:$APP_HOME/lib/annotations-23.0.0.jar:$APP_HOME/lib/commons-math3-3.6.1.jar:$APP_HOME/lib/microprofile-config-api-3.1.jar:$APP_HOME/lib/jline-3.23.0.jar:$APP_HOME/lib/log4j-api-2.23.0.jar:$APP_HOME/lib/parquet-hadoop-1.13.1.jar:$APP_HOME/lib/parquet-column-1.13.1.jar:$APP_HOME/lib/parquet-encoding-1.13.1.jar:$APP_HOME/lib/parquet-common-1.13.1.jar:$APP_HOME/lib/metrics-core-3.2.4.jar:$APP_HOME/lib/slf4j-api-2.0.9.jar:$APP_HOME/lib/hadoop-mapreduce-client-core-3.3.6.jar:$APP_HOME/lib/parquet-format-structures-1.13.1.jar:$APP_HOME/lib/parquet-jackson-1.13.1.jar:$APP_HOME/lib/snappy-java-1.1.8.3.jar:$APP_HOME/lib/aircompressor-0.21.jar:$APP_HOME/lib/commons-pool-1.6.jar:$APP_HOME/lib/zstd-jni-1.5.0-1.jar:$APP_HOME/lib/audience-annotations-0.13.0.jar:$APP_HOME/lib/hadoop-shaded-protobuf_3_7-1.1.1.jar:$APP_HOME/lib/hadoop-shaded-guava-1.1.1.jar:$APP_HOME/lib/guava-27.0-jre.jar:$APP_HOME/lib/commons-codec-1.15.jar:$APP_HOME/lib/commons-io-2.8.0.jar:$APP_HOME/lib/commons-net-3.9.0.jar:$APP_HOME/lib/commons-beanutils-1.9.4.jar:$APP_HOME/lib/commons-collections-3.2.2.jar:$APP_HOME/lib/jakarta.activation-api-1.2.1.jar:$APP_HOME/lib/jersey-json-1.20.jar:$APP_HOME/lib/commons-configuration2-2.8.0.jar:$APP_HOME/lib/commons-logging-1.2.jar:$APP_HOME/lib/commons-text-1.10.0.jar:$APP_HOME/lib/commons-lang3-3.12.0.jar:$APP_HOME/lib/re2j-1.1.jar:$APP_HOME/lib/protobuf-java-2.5.0.jar:$APP_HOME/lib/jsr305-3.0.2.jar:$APP_HOME/lib/commons-compress-1.21.jar:$APP_HOME/lib/woodstox-core-5.4.0.jar:$APP_HOME/lib/stax2-api-4.2.1.jar:$APP_HOME/lib/failureaccess-1.0.jar:$APP_HOME/lib/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:$APP_HOME/lib/checker-qual-2.5.2.jar:$APP_HOME/lib/j2objc-annotations-1.1.jar:$APP_HOME/lib/animal-sniffer-annotations-1.17.jar:$APP_HOME/lib/jettison-1.1.jar:$APP_HOME/lib/jaxb-impl-2.2.3-1.jar:$APP_HOME/lib/jaxb-api-2.2.2.jar:$APP_HOME/lib/stax-api-1.0-2.jar:$APP_HOME/lib/activation-1.1.jar
CLASSPATH=/Users/didepoyraz/Desktop/honours/opendc-2/opendc-experiments/opendc-experiments-scenario/build/classes/java/main:/Users/didepoyraz/Desktop/honours/opendc-2/opendc-experiments/opendc-experiments-scenario/build/classes/kotlin/main:/Users/didepoyraz/Desktop/honours/opendc-2/opendc-experiments/opendc-experiments-scenario/build/resources/main:/Users/didepoyraz/Desktop/honours/opendc-2/opendc-experiments/opendc-experiments-base/build/libs/opendc-experiments-base.jar:/Users/didepoyraz/Desktop/honours/opendc-2/opendc-compute/opendc-compute-failure/build/libs/opendc-compute-failure.jar:/Users/didepoyraz/Desktop/honours/opendc-2/opendc-compute/opendc-compute-simulator/build/libs/opendc-compute-simulator.jar:/Users/didepoyraz/Desktop/honours/opendc-2/opendc-compute/opendc-compute-topology/build/libs/opendc-compute-topology.jar:/Users/didepoyraz/Desktop/honours/opendc-2/opendc-compute/opendc-compute-workload/build/libs/opendc-compute-workload.jar:/Users/didepoyraz/Desktop/honours/opendc-2/opendc-compute/opendc-compute-telemetry/build/libs/opendc-compute-telemetry.jar:/Users/didepoyraz/Desktop/honours/opendc-2/opendc-compute/opendc-compute-service/build/libs/opendc-compute-service.jar:/Users/didepoyraz/Desktop/honours/opendc-2/opendc-compute/opendc-compute-carbon/build/libs/opendc-compute-carbon.jar:/Users/didepoyraz/Desktop/honours/opendc-2/opendc-compute/opendc-compute-api/build/libs/opendc-compute-api.jar:/Users/didepoyraz/Desktop/honours/opendc-2/opendc-simulator/opendc-simulator-compute/build/libs/opendc-simulator-compute.jar:/Users/didepoyraz/Desktop/honours/opendc-2/opendc-simulator/opendc-simulator-power/build/libs/opendc-simulator-power.jar:/Users/didepoyraz/Desktop/honours/opendc-2/opendc-simulator/opendc-simulator-network/build/libs/opendc-simulator-network.jar:/Users/didepoyraz/Desktop/honours/opendc-2/opendc-simulator/opendc-simulator-core/build/libs/opendc-simulator-core.jar:/Users/didepoyraz/Desktop/honours/opendc-2/opendc-simulator/opendc-simulator-flow/build/libs/opendc-simulator-flow.jar:/Users/didepoyraz/Desktop/honours/opendc-2/opendc-common/build/libs/opendc-common.jar:/Users/didepoyraz/Desktop/honours/opendc-2/opendc-trace/opendc-trace-api/build/libs/opendc-trace-api.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.dataformat/jackson-dataformat-csv/2.16.1/e969fb30d2f90651d46265abf09e97b41101bd89/jackson-dataformat-csv-2.16.1.jar:/Users/didepoyraz/Desktop/honours/opendc-2/opendc-trace/opendc-trace-parquet/build/libs/opendc-trace-parquet.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.apache.hadoop/hadoop-common/3.3.6/9ca864bec94779e74b99e84ea02dba85a641233/hadoop-common-3.3.6.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-databind/2.16.1/2a16efeb840c45af1e2f31753dfe76795278b73/jackson-databind-2.16.1.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-annotations/2.16.1/fd441d574a71e7d10a4f73de6609f881d8cdfeec/jackson-annotations-2.16.1.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.16.1/9456bb3cdd0f79f91a5f730a1b1bb041a380c91f/jackson-core-2.16.1.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.module/jackson-module-kotlin/2.16.1/1e762d7056f7dc368af3854f2992b82206d39ed4/jackson-module-kotlin-2.16.1.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-reflect/1.6.21/5dc3574d9b7bebfcb4ec6b10ada4aaa9e140bd0b/kotlin-reflect-1.6.21.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlinx/kotlinx-serialization-core-jvm/1.6.0/94b35f721f1029b3b8d46fb277b4e53fb1a0a510/kotlinx-serialization-core-jvm-1.6.0.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlinx/kotlinx-serialization-json-jvm/1.6.0/59761a941bd8691b3ef2447f5b9376868a6b2d7e/kotlinx-serialization-json-jvm-1.6.0.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlinx/kotlinx-coroutines-core-jvm/1.8.0/ac1dc37a30a93150b704022f8d895ee1bd3a36b3/kotlinx-coroutines-core-jvm-1.8.0.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/io.github.microutils/kotlin-logging-jvm/3.0.5/82f2256aeedccfd9c27ea585274a50bf06517383/kotlin-logging-jvm-3.0.5.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib-jdk8/1.8.10/7c002ac41f547a82e81dfebd2a20577a738dbf3f/kotlin-stdlib-jdk8-1.8.10.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/com.github.ajalt.clikt/clikt-jvm/3.5.2/c2260b9cd50ee1a2c68936b72235b19e001cf8c1/clikt-jvm-3.5.2.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib-jdk7/1.8.10/cb726a23c808a850a43e7d6b9d1ba91b02fe9f05/kotlin-stdlib-jdk7-1.8.10.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib/1.9.22/d6c44cd08d8f3f9bece8101216dbe6553365c6e3/kotlin-stdlib-1.9.22.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/me.tongfei/progressbar/0.10.0/9dca8647ecb042e3605f66d135ce67578ef5dc67/progressbar-0.10.0.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-slf4j2-impl/2.23.0/274933b0a9a3afa8bd97ad8ffaf7d3b4e2172227/log4j-slf4j2-impl-2.23.0.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-core/2.23.0/fe82862c4294275ed64623e8b04946e3c4cb658a/log4j-core-2.23.0.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.jetbrains/annotations/23.0.0/8cc20c07506ec18e0834947b84a864bfc094484e/annotations-23.0.0.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.apache.commons/commons-math3/3.6.1/e4ba98f1d4b3c80ec46392f25e094a6a2e58fcbf/commons-math3-3.6.1.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.eclipse.microprofile.config/microprofile-config-api/3.1/cef8b70598a93582a4084fe67f4686eb399e70fd/microprofile-config-api-3.1.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.jline/jline/3.23.0/bac2dbcb918b9e205962ffeea03ae707ec3d30bb/jline-3.23.0.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-api/2.23.0/10741ddf9effd8e04d568148c2948a22f3f4cc73/log4j-api-2.23.0.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.apache.parquet/parquet-hadoop/1.13.1/6b9a84875b7576d64cf4890c69c2ed1c7557b950/parquet-hadoop-1.13.1.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.apache.parquet/parquet-column/1.13.1/9ed76ae5d9fdfc6c2eb51aef87ad34c5cdc56384/parquet-column-1.13.1.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.apache.parquet/parquet-encoding/1.13.1/2554cef74a90736ad42ed994116123038c0ffee9/parquet-encoding-1.13.1.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.apache.parquet/parquet-common/1.13.1/77e65a1a4522f476994aa90c06fcca842c4ab73f/parquet-common-1.13.1.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/io.dropwizard.metrics/metrics-core/3.2.4/36af4975e38bb39686a63ba5139dce8d3f410669/metrics-core-3.2.4.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-api/2.0.9/7cf2726fdcfbc8610f9a71fb3ed639871f315340/slf4j-api-2.0.9.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.apache.hadoop/hadoop-mapreduce-client-core/3.3.6/b75e5e9feb70f599a6f6232e71bd5b0030608179/hadoop-mapreduce-client-core-3.3.6.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.apache.parquet/parquet-format-structures/1.13.1/550ac211af104eabeedfaabe68f6769010a80366/parquet-format-structures-1.13.1.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.apache.parquet/parquet-jackson/1.13.1/c096efa2bb68d24d29139e93f9b5a5357f10f253/parquet-jackson-1.13.1.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.xerial.snappy/snappy-java/1.1.8.3/2c58fa5745831afa3a4290c2ce15553ff13ad0ab/snappy-java-1.1.8.3.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/io.airlift/aircompressor/0.21/d1efd839d539481952a9757834054239774f057/aircompressor-0.21.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/commons-pool/commons-pool/1.6/4572d589699f09d866a226a14b7f4323c6d8f040/commons-pool-1.6.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/com.github.luben/zstd-jni/1.5.0-1/e7fe84d449409634be17ab7dfa0ea4e29c2a7076/zstd-jni-1.5.0-1.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.apache.yetus/audience-annotations/0.13.0/8ad1147dcd02196e3924013679c6bf4c25d8c351/audience-annotations-0.13.0.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.apache.hadoop.thirdparty/hadoop-shaded-protobuf_3_7/1.1.1/57b7ba0ca94313c342b03bd31830fe4a8f34bc1a/hadoop-shaded-protobuf_3_7-1.1.1.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.apache.hadoop.thirdparty/hadoop-shaded-guava/1.1.1/2419d851c01139edf9e19b81056382163d9bfab/hadoop-shaded-guava-1.1.1.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/com.google.guava/guava/27.0-jre/c6ad87d2575af8ac8ec38e28e75aefa882cc3a1f/guava-27.0-jre.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/commons-codec/commons-codec/1.15/49d94806b6e3dc933dacbd8acb0fdbab8ebd1e5d/commons-codec-1.15.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/commons-io/commons-io/2.8.0/92999e26e6534606b5678014e66948286298a35c/commons-io-2.8.0.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/commons-net/commons-net/3.9.0/5a4e26802e0a5a42938f987976b55dae4a6cc636/commons-net-3.9.0.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/commons-beanutils/commons-beanutils/1.9.4/d52b9abcd97f38c81342bb7e7ae1eee9b73cba51/commons-beanutils-1.9.4.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/commons-collections/commons-collections/3.2.2/8ad72fe39fa8c91eaaf12aadb21e0c3661fe26d5/commons-collections-3.2.2.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/jakarta.activation/jakarta.activation-api/1.2.1/562a587face36ec7eff2db7f2fc95425c6602bc1/jakarta.activation-api-1.2.1.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/com.github.pjfanning/jersey-json/1.20/3ced16e1d195baf892041e66f9f4e41595b7a3b4/jersey-json-1.20.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.apache.commons/commons-configuration2/2.8.0/6a76acbe14d2c01d4758a57171f3f6a150dbd462/commons-configuration2-2.8.0.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/commons-logging/commons-logging/1.2/4bfc12adfe4842bf07b657f0369c4cb522955686/commons-logging-1.2.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.apache.commons/commons-text/1.10.0/3363381aef8cef2dbc1023b3e3a9433b08b64e01/commons-text-1.10.0.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.apache.commons/commons-lang3/3.12.0/c6842c86792ff03b9f1d1fe2aab8dc23aa6c6f0e/commons-lang3-3.12.0.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/com.google.re2j/re2j/1.1/d716952ab58aa4369ea15126505a36544d50a333/re2j-1.1.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/com.google.protobuf/protobuf-java/2.5.0/a10732c76bfacdbd633a7eb0f7968b1059a65dfa/protobuf-java-2.5.0.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/com.google.code.findbugs/jsr305/3.0.2/25ea2e8b0c338a877313bd4672d3fe056ea78f0d/jsr305-3.0.2.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.apache.commons/commons-compress/1.21/4ec95b60d4e86b5c95a0e919cb172a0af98011ef/commons-compress-1.21.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/com.fasterxml.woodstox/woodstox-core/5.4.0/3e05dcce371d3f672feba29f086ad78a93ae3996/woodstox-core-5.4.0.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.codehaus.woodstox/stax2-api/4.2.1/a3f7325c52240418c2ba257b103c3c550e140c83/stax2-api-4.2.1.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/com.google.guava/failureaccess/1.0/50bacb0bdbbeeda25142aff57e2214c402e1193c/failureaccess-1.0.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/com.google.guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/b421526c5f297295adef1c886e5246c39d4ac629/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.checkerframework/checker-qual/2.5.2/cea74543d5904a30861a61b4643a5f2bb372efc4/checker-qual-2.5.2.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/com.google.j2objc/j2objc-annotations/1.1/ed28ded51a8b1c6b112568def5f4b455e6809019/j2objc-annotations-1.1.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.codehaus.mojo/animal-sniffer-annotations/1.17/f97ce6decaea32b36101e37979f8b647f00681fb/animal-sniffer-annotations-1.17.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/org.codehaus.jettison/jettison/1.1/1a01a2a1218fcf9faa2cc2a6ced025bdea687262/jettison-1.1.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/com.sun.xml.bind/jaxb-impl/2.2.3-1/56baae106392040a45a06d4a41099173425da1e6/jaxb-impl-2.2.3-1.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/javax.xml.bind/jaxb-api/2.2.2/aeb3021ca93dde265796d82015beecdcff95bf09/jaxb-api-2.2.2.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/javax.xml.stream/stax-api/1.0-2/d6337b0de8b25e53e81b922352fbea9f9f57ba0b/stax-api-1.0-2.jar:/Users/didepoyraz/.gradle/caches/modules-2/files-2.1/javax.activation/activation/1.1/e6cb541461c2834bdea3eb920f1884d1eb508b50/activation-1.1.jar

# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
        # IBM's JDK on AIX uses strange locations for the executables
        JAVACMD=$JAVA_HOME/jre/sh/java
    else
        JAVACMD=$JAVA_HOME/bin/java
    fi
    if [ ! -x "$JAVACMD" ] ; then
        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
else
    JAVACMD=java
    if ! command -v java >/dev/null 2>&1
    then
        die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
fi

# Increase the maximum file descriptors if we can.
if ! "$cygwin" && ! "$darwin" && ! "$nonstop" ; then
    case $MAX_FD in #(
      max*)
        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.
        # shellcheck disable=SC2039,SC3045
        MAX_FD=$( ulimit -H -n ) ||
            warn "Could not query maximum file descriptor limit"
    esac
    case $MAX_FD in  #(
      '' | soft) :;; #(
      *)
        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.
        # shellcheck disable=SC2039,SC3045
        ulimit -n "$MAX_FD" ||
            warn "Could not set maximum file descriptor limit to $MAX_FD"
    esac
fi

# Collect all arguments for the java command, stacking in reverse order:
#   * args from the command line
#   * the main class name
#   * -classpath
#   * -D...appname settings
#   * --module-path (only if needed)
#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GREENIFIER_OPTS environment variables.

# For Cygwin or MSYS, switch paths to Windows format before running java
if "$cygwin" || "$msys" ; then
    APP_HOME=$( cygpath --path --mixed "$APP_HOME" )
    CLASSPATH=$( cygpath --path --mixed "$CLASSPATH" )

    JAVACMD=$( cygpath --unix "$JAVACMD" )

    # Now convert the arguments - kludge to limit ourselves to /bin/sh
    for arg do
        if
            case $arg in                                #(
              -*)   false ;;                            # don't mess with options #(
              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath
                    [ -e "$t" ] ;;                      #(
              *)    false ;;
            esac
        then
            arg=$( cygpath --path --ignore --mixed "$arg" )
        fi
        # Roll the args list around exactly as many times as the number of
        # args, so each arg winds up back in the position where it started, but
        # possibly modified.
        #
        # NB: a `for` loop captures its iteration list before it begins, so
        # changing the positional parameters here affects neither the number of
        # iterations, nor the values presented in `arg`.
        shift                   # remove old arg
        set -- "$@" "$arg"      # push replacement arg
    done
fi


# Add default JVM options here. You can also use JAVA_OPTS and GREENIFIER_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS=""

# Collect all arguments for the java command:
#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,
#     and any embedded shellness will be escaped.
#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be
#     treated as '${Hostname}' itself on the command line.

set -- \
        -classpath "$CLASSPATH" \
        org.opendc.experiments.scenario.ScenarioCli \
        "$@"

# Stop when "xargs" is not available.
if ! command -v xargs >/dev/null 2>&1
then
    die "xargs is not available"
fi

# Use "xargs" to parse quoted args.
#
# With -n1 it outputs one arg per line, with the quotes and backslashes removed.
#
# In Bash we could simply go:
#
#   readarray ARGS < <( xargs -n1 <<<"$var" ) &&
#   set -- "${ARGS[@]}" "$@"
#
# but POSIX shell has neither arrays nor command substitution, so instead we
# post-process each arg (as a line of input to sed) to backslash-escape any
# character that might be a shell metacharacter, then use eval to reverse
# that process (while maintaining the separation between arguments), and wrap
# the whole thing up as a single "set" statement.
#
# This will of course break if any of these variables contains a newline or
# an unmatched quote.
#

eval "set -- $(
        printf '%s\n' "$DEFAULT_JVM_OPTS $JAVA_OPTS $GREENIFIER_OPTS" |
        xargs -n1 |
        sed ' s~[^-[:alnum:]+,./:=@_]~\\&~g; ' |
        tr '\n' ' '
    )" '"$@"'

exec "$JAVACMD" "$@"
